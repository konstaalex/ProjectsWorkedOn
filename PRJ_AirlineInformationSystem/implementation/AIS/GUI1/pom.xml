<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>airlineinformationsystem</artifactId>
        <groupId>io.github.fontysvenlo.ais</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>io.github.fontysvenlo.ais.gui</groupId>
    <artifactId>GUI</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>16</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>16</version>
        </dependency>

        <dependency>
            <groupId>io.github.fontysvenlo.ais.businesslogic</groupId>
            <artifactId>BusinessLogic</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.calendarfx</groupId>
            <artifactId>view</artifactId>
            <version>11.12.5</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>

            <dependency>
                <groupId>org.controlsfx</groupId>
                <artifactId>controlsfx</artifactId>
                <version>11.1.0</version>
            </dependency>

            <dependency>
                <groupId>org.kordamp.bootstrapfx</groupId>
                <artifactId>bootstrapfx-core</artifactId>
                <version>0.4.0</version>
            </dependency>

<!--            <dependency>-->
<!--                <groupId>org.fxmisc.flowless</groupId>-->
<!--                <artifactId>flowless</artifactId>-->
<!--                <version>0.7.3</version>-->
<!--            </dependency>-->

        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.16-alpha</version>
            <scope>test</scope>
        </dependency>
        
    </dependencies>

<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>central</id>-->
<!--            <name>Maven Central Repository</name>-->
<!--            <url>https://repo.maven.apache.org/maven2</url>-->
<!--        </repository>-->
<!--    </repositories>-->


    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- add add-opens lines for **ALL** packages in your module that are tested.
                        For testing it is fine to open your packages for the whole world, which includes
                        e.g. junit, assertj, mockito, and jacoco, to name a few.
                        Also leave ${argLine} because it is set/used by the coverage plugin.
                    -->
                    <argLine>
                        ${argLine}
                        --add-opens gui_module/gui=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.javafx.application.ParametersImpl=ALL-UNNAMED
                        --add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.4</version>
                <configuration>
                    <mainClass>gui.App</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <!-- Default configuration for running -->
                        <!-- Usage: mvn clean javafx:run -->
                        <id>default-cli</id>
                    </execution>
                    <execution>
                        <!-- Configuration for manual attach debugging -->
                        <!-- Usage: mvn clean javafx:run@debug -->
                        <id>debug</id>
                        <configuration>
                            <options>
                                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=localhost:8000</option>
                            </options>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Configuration for automatic IDE debugging -->
                        <id>ide-debug</id>
                        <configuration>
                            <options>
                                <option>-agentlib:jdwp=transport=dt_socket,server=n,address=${jpda.address}</option>
                            </options>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Configuration for automatic IDE profiling -->
                        <id>ide-profile</id>
                        <configuration>
                            <options>
                                <option>${profiler.jvmargs.arg1}</option>
                                <option>${profiler.jvmargs.arg2}</option>
                                <option>${profiler.jvmargs.arg3}</option>
                                <option>${profiler.jvmargs.arg4}</option>
                                <option>${profiler.jvmargs.arg5}</option>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
